const config = require('../config');
const { cmd } = require('../command');
const { runtime } = require('../lib/functions');
const os = require("os");
const path = require('path');
const axios = require('axios');
const fs = require('fs');

cmd({
    pattern: "env",
    desc: "menu the bot",
    category: "menu3",
    react: "‚ö°",
    filename: __filename
},
async (conn, mek, m, { from, sender, pushname, reply }) => {
    try {
        const dec = `‚ï≠‚îÅ‚îÅ‚îÅ„Äî *${config.BOT_NAME} Main Menu* „Äï‚îÅ‚îÅ‚îÅ‚ïÆ
‚îÉ ‚ú® *Owner:* ${config.OWNER_NAME}
‚îÉ ‚öôÔ∏è *Mode:* ${config.MODE}
‚îÉ üì° *Platform:* Heroku
‚îÉ üß† *Type:* NodeJs (Multi Device)
‚îÉ ‚å®Ô∏è *Prefix:* ${config.PREFIX}
‚îÉ üßæ *Version:* 3.0.0 Beta
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ„Äî *Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚Äé‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *admin-events*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *welcome*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *setprefix*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *mode*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *auto_typing*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *always_online*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *auto_reacording*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *status_view* 
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *status_react*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *read_message*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *auto_sticker*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *anti_bad*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *auto_reply*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *auto_voice*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *custom_reacts*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *auto_react*
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *anti_link* 
‚Äé‚îÉ‚óà‚îÉ‚Ä¢ *status_reply*
‚Äé‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚Äé‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> ${config.DESCRIPTION}
`;

        await conn.sendMessage(
            from,
            {
                image: { url: config.MENU_IMAGE_URL },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363420726522361@newsletter',
                        newsletterName: 'VEMPIRE-MDüòà',
                        serverMessageId: 779
                    }
                }
            },
            { quoted: mek }
        );

        // Send local audio from assets/menu.m4aa

const audioPath = path.join(__dirname, '../assets/menu.m4aa');
await conn.sendMessage(from, {
    audio: fs.readFileSync(audioPath),
    mimetype: 'audio/mp4',
    ptt: true,
}, { quoted: mek });

    } catch (e) {
        console.error(e);
        reply(`‚ùå Error:\n${e}`);
    }
});
